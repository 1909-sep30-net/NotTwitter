trigger:
  branches:
    include:
    - master
  paths:
    include:
    - NotTwitterAngular

pool:
  vmImage: 'ubuntu-latest'

variables:
  appDir: NotTwitterAngular

steps:
- checkout: self
  clean: true

- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

# npm install:
#   1. reads the package.json
#   2. looks at what's already in node_modules, and doesn't upgrade what is already OK
#   3. downloads anything that needs upgrading into node_modules
#   4. updates/creates a "manifest file" package-lock.json

# npm ci:
#   1. ignores package.json
#   2. deletes everything in node_modules
#   3. downloads exactly what package-lock.json says (deterministic build)
- script: npm ci
  displayName: npm install
  workingDirectory: $(appDir)

- script: ngx ng build --prod --aot=false --build-optimizer=false
  displayName: ng build
  workingDirectory: $(appDir)

# - script: npx ng test --browsers ChromeHeadless --no-watch --code-coverage
#   displayName: ng test
#   workingDirectory: $(appDir)

# - script: npm run lint
#   displayName: ng lint
#   workingDirectory: $(appDir)

- task: AzureRmWebAppDeployment@4
  displayName: App Service deploy
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(7b6b20dd-8eaa-42bc-be67-56cb3efa9f4f)'
    appType: 'webApp'
    WebAppName: 'nottwitter'
    packageForLinux: '$(appDir)/dist/*'